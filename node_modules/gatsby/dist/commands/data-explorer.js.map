{"version":3,"sources":["../../src/commands/data-explorer.js"],"names":["express","require","graphqlHTTP","store","bootstrap","GraphQLSchema","module","exports","program","port","host","parseInt","schema","getState","console","log","app","use","graphiql","listen"],"mappings":";;;;;;;;;;;;AAEA,IAAMA,UAAUC,QAAS,SAAT,CAAhB;AACA,IAAMC,cAAcD,QAAS,iBAAT,CAApB;;eACkBA,QAAS,UAAT,C;IAAVE,K,YAAAA,K;;AACR,IAAMC,YAAYH,QAAS,cAAT,CAAlB;;gBAC0BA,QAAS,SAAT,C;IAAlBI,a,aAAAA,a;;AAERC,OAAOC,OAAP;AAAA,sFAAiB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,gBADS,GACMD,OADN,CACTC,IADS,EACHC,IADG,GACMF,OADN,CACHE,IADG;;AAEfD,mBAAO,OAAOA,IAAP,KAAiB,QAAjB,GAA2BE,SAASF,IAAT,EAAe,EAAf,CAA3B,GAAgDA,IAAvD;;AAEA;AAJe;AAAA,mBAKTL,UAAUI,OAAV,CALS;;AAAA;AAOTI,kBAPS,GAOAT,MAAMU,QAAN,GAAiBD,MAPjB;;;AASfE,oBAAQC,GAAR,CACG,sCADH,EAEEH,kBAAkBP,aAFpB;;AAKMW,eAdS,GAcHhB,SAdG;;AAefgB,gBAAIC,GAAJ,CACG,GADH,EAEEf,YAAY;AACVU,oBADU;AAEVM,wBAAU;AAFA,aAAZ,CAFF;;AAQAJ,oBAAQC,GAAR,CAAa,iCAAb,EAAgD,UAASL,IAAK,IAAGD,IAAK,EAAtE;AACAO,gBAAIG,MAAJ,CAAWV,IAAX,EAAiBC,IAAjB;;AAxBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA","file":"data-explorer.js","sourcesContent":["/* @flow */\n\nconst express = require(`express`)\nconst graphqlHTTP = require(`express-graphql`)\nconst { store } = require(`../redux`)\nconst bootstrap = require(`../bootstrap`)\nconst { GraphQLSchema } = require(`graphql`)\n\nmodule.exports = async (program: any) => {\n  let { port, host } = program\n  port = typeof port === `string` ? parseInt(port, 10) : port\n\n  // bootstrap to ensure schema is in the store\n  await bootstrap(program)\n\n  const schema = store.getState().schema\n\n  console.log(\n    `Schema is instance of GraphQLSchema?`,\n    schema instanceof GraphQLSchema\n  )\n\n  const app = express()\n  app.use(\n    `/`,\n    graphqlHTTP({\n      schema,\n      graphiql: true,\n    })\n  )\n\n  console.log(`Gatsby data explorer running at`, `http://${host}:${port}`)\n  app.listen(port, host)\n}\n"]}